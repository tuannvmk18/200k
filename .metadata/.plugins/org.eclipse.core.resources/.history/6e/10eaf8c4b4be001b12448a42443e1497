package vn.nntt.controller.web;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import vn.nntt.model.SongModel;
import vn.nntt.service.ISongService;

@Controller(value = "homeControllerOfWeb")
public class HomeController {
	
	@Autowired
	private ISongService SongService;
	
	 @RequestMapping(value = "/trang-chu", method = RequestMethod.GET)
	   public ModelAndView homePage(@ModelAttribute("model") SongModel model) {
	      ModelAndView mav = new ModelAndView("web/home");
	      model.setListResult(SongService.findAll());
	      mav.addObject("model", model);
	      return mav;
	   }
	 public @ResponseBody String searchPerson(HttpServletRequest request) {
			String query = request.getParameter("name");
			Person person = searchPersonByName(query);

			ObjectMapper mapper = new ObjectMapper();
			String ajaxResponse = "";
			try {
				ajaxResponse = mapper.writeValueAsString(person);
			} catch (JsonProcessingException e) {
				e.printStackTrace();
			}

			return ajaxResponse;
		}
	 public Person searchPersonByName(String query) {
			for (SongModel p : listPerson) {
				if (p.getTenBH().equals(query)) {
					return p;
				}
			}
			return null;
		}
	 
	 
	 
	 
	 @RequestMapping(value = "/nghe-sy", method = RequestMethod.GET)
	   public ModelAndView artistPage(@ModelAttribute("model") SongModel model) {
	      ModelAndView mav = new ModelAndView("web/artist");
	      model.setListResult(SongService.findAllSongPerSinger());
	      mav.addObject("model", model);
	      return mav;
	   }
	 
	 @RequestMapping(value = "/the-loai", method = RequestMethod.GET)
	   public ModelAndView genrePage(@ModelAttribute("model") SongModel model) {
	      ModelAndView mav = new ModelAndView("web/genre");
	      model.setListResult(SongService.findAllSongPerGenre());
	      mav.addObject("model", model);
	      return mav;
	   }
}
